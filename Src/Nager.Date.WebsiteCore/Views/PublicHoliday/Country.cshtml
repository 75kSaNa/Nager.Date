@inject Microsoft.AspNetCore.Http.IHttpContextAccessor HttpContextAccessor
@model Nager.Date.WebsiteCore.Models.PublicHolidayInfo
@{
    ViewData["Title"] = "Public Holidays in " + Model.Country + " (" + Model.CountryCode + ")";
}

<header class="public-holiday-country-header">
    <div class="container-fluid">
        <div class="row">
            <div class="col-12 col-xl-2 mt-5 text-center">
                <img src="~/images/flags/blank.gif" class="flag flag-@Model.CountryCode.ToLower()" alt="@Model.Country" title="@Model.Country" />
            </div>
            <div class="col-12 col-xl-10">
                <h1 class="display-4 mt-4">Public Holidays in @Model.Country @Model.Year</h1>
                <h4 class="mt-2 hidden-xs">A list of public holidays observed in @Model.Country</h4>
            </div>
        </div>
    </div>
</header>

<div class="container-fluid" id="App" v-cloak>

    @*<div class="row mt-4">

            <div class="col-12 col-sm-6 col-lg-2">
                <!-- .metric -->
                <div class="card-metric">
                    <div class="metric">
                        <p class="metric-value h3">
                            <i class="fa fa-star-o" aria-hidden="true"></i> <span class="value">Public holidays</span>
                        </p>
                        <h1 class="metric-label mt-3">12</h1>
                    </div>
                </div><!-- /.metric -->
            </div>

            <div class="col-12 col-sm-6 col-lg-2">
                <div class="card-metric">
                    <div class="metric">
                        <p class="metric-value h3">
                            <i class="fa fa-gift" aria-hidden="true"></i> <span class="value">Long weekends</span>
                        </p>
                        <h1 class="metric-label mt-3">1</h1>
                    </div>
                </div>
            </div>

        </div>*@

    <div class="row">
        <div class="col-12 col-xl-8 mt-4">
            <div class="card">
                <header class="card-header border-0"><i class="fas fa-globe-africa"></i> Public holidays</header>
                <div class="table-responsive" v-if="publicHolidays">
                    <table class="table" v-if="publicHolidays.length > 0">
                        <thead>
                            <tr>
                                <th>Date</th>
                                <th class="d-none d-sm-table-cell">Local name</th>
                                <th class="d-none d-sm-table-cell">Name</th>
                                <th class="d-sm-none">Name</th>
                                <th class="d-none d-lg-table-cell">Global</th>
                                <th class="d-none d-lg-table-cell" style="width: 30%" v-if="showColumnCounty">Countys</th>
                                <th>Type</th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr v-for="publicHoliday in publicHolidays">
                                <td>{{ publicHoliday.date | longLocalDate }}</td>
                                <td class="d-none d-sm-table-cell">{{ publicHoliday.localName }}</td>
                                <td class="d-none d-sm-table-cell">{{ publicHoliday.name }}</td>
                                <td class="d-sm-none"><strong>{{ publicHoliday.name }}</strong><br />{{ publicHoliday.localName }}</td>
                                <td class="d-none d-lg-table-cell">
                                    <i class="fas fa-check" v-if="publicHoliday.global"></i>
                                    <i class="fas fa-ban" v-if="!publicHoliday.global"></i>
                                </td>
                                <td class="d-none d-lg-table-cell" v-if="showColumnCounty">
                                    <template v-if="!publicHoliday.global" v-for="county in publicHoliday.counties">
                                        <span class="badge badge-light">{{ county }}</span>
                                    </template>
                                </td>
                                <td>
                                    {{ publicHoliday.type }}
                                </td>
                            </tr>
                        </tbody>
                    </table>
                    <div v-else class="p-3">
                        No data for this country available.
                    </div>
                </div>
                <div v-else class="p-3">
                    <div class="spinner-grow text-primary" role="status">
                        <span class="sr-only">Loading...</span>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-12 col-xl-4 mt-4">
            <div class="card">
                <header class="card-header border-0"><i class="fas fa-calendar-alt"></i> Long weekends</header>
                <div class="table-responsive" v-if="longWeekends">
                    <table class="table" v-if="longWeekends.length > 0">
                        <thead>
                            <tr>
                                <th>Startdate</th>
                                <th>Enddate</th>
                                <th>Days</th>
                                <th>Need a Bridge Day</th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr v-for="longWeekend in longWeekends">
                                <td>{{ longWeekend.startDate | shortLocalDate }}</td>
                                <td>{{ longWeekend.endDate | shortLocalDate }}</td>
                                <td>{{ longWeekend.dayCount }}</td>
                                <td>
                                    <span v-if="longWeekend.needBridgeDay" class="glyphicon glyphicon-ok" aria-hidden="true">x</span>
                                    <span v-if="!longWeekend.needBridgeDay" class="glyphicon glyphicon-remove" aria-hidden="true">-</span>
                                </td>
                            </tr>
                        </tbody>
                    </table>
                    <div v-else class="p-3">
                        No data for this country available.
                    </div>
                </div>
                <div v-else class="p-3">
                    <div class="spinner-grow text-primary" role="status">
                        <span class="sr-only">Loading...</span>
                    </div>
                </div>
            </div>

            <div class="card mt-4" v-if="countryInfo && countryInfo.borders.length > 0">
                <header class="card-header border-0">Border countries</header>
                <div>
                    <ul class="list-group">
                        <li v-for="border in countryInfo.borders" class="list-group-item">
                            <a :href="'/PublicHoliday/Country/' + border.countryCode">{{ border.commonName }}</a>
                        </li>
                    </ul>
                </div>
            </div>

            <div class="card mt-4" v-if="publicHolidays && publicHolidays.length > 0">
                <header class="card-header border-0">Downloads</header>
                <div>
                    <ul class="list-group">
                        @*<li class="list-group-item">
                                <i class="fa fa-calendar" aria-hidden="true"></i> <a href="/PublicHoliday/DownloadCSV/@(Model.CountryCode)/@(Model.Year)">PDF Calendar</a>
                        </li>*@
                        <li class="list-group-item">
                            <i class="fas fa-file-csv"></i> <a href="/PublicHoliday/Country/@(Model.CountryCode)/@(Model.Year)/CSV">CSV</a>
                        </li>
                    </ul>
                </div>
            </div>
        </div>
    </div>


    <nav class="mt-3 d-none d-sm-block">
        <ul class="pagination">
            @for (var i = Model.Year - 5; i < Model.Year + 6; i++)
            {
                <li class="page-item">
                    <a href="/PublicHoliday/Country/@(Model.CountryCode)/@(i)" class="page-link">@i</a>
                </li>
            }
        </ul>
    </nav>

</div>

@if (HttpContextAccessor.HttpContext.Request.Cookies.ContainsKey("cookieconsent_status"))
{
    <div class="mt-3 mb-4 d-flex justify-content-center">
        <div class="d-none d-sm-block">
            <iframe src="https://rcm-eu.amazon-adsystem.com/e/cm?f=ifr&t=publicholiday-21&o=3&p=48&l=bn1&mode=computers&browse=340843031&fc1=000000&lt1=_top&lc1=A43907&bg1=EFEFCC" marginwidth="0" marginheight="0" width="728" height="90" border="0" frameborder="0" style="border:none;" scrolling="no"></iframe>
        </div>
        <div class="d-block d-sm-none">
            <iframe src="https://rcm-eu.amazon-adsystem.com/e/cm?f=ifr&t=publicholiday-21&o=3&p=286&l=st1&mode=amazontv-de&search=&fc1=000000&lt1=_top&lc1=A43907&bg1=EFEFCC" marginwidth="0" marginheight="0" width="200" height="200" border="0" frameborder="0" style="border:none;" scrolling="no"></iframe>
        </div>
    </div>
}

@section scripts {

<script type="text/javascript">

new Vue({
    el: '#App',
    data: {
        countryInfo: null,
        longWeekends: null,
        publicHolidays: null
    },
    mounted() {
        this.GetPublicHolidays();
        this.GetCountryInfo();
        this.GetLongWeekends();
    },
    filters: {
        shortLocalDate: function (date) {
            var locale = window.navigator.userLanguage || window.navigator.language;
            moment.locale(locale);
            return moment(date).format('L');
        },
        longLocalDate: function (date) {
            var locale = window.navigator.userLanguage || window.navigator.language;
            moment.locale(locale);
            return moment(date).format('dd L');
        }
    },
    computed: {
        showColumnCounty: function () {
            if (this.publicHolidays === null) {
                return false;
            }
            let count = this.publicHolidays.filter(o => !o.global);
            return count.length !== 0;
        }
    },
    methods: {
        GetCountryInfo: function () {
            axios.get('/Api/v2/CountryInfo?countryCode=@(Model.CountryCode)')
                .then(response => {
                    this.countryInfo = response.data
                })
                .catch(error => {
                    console.log(error)
                });
        },
        GetLongWeekends: function () {
            axios.get('/Api/v2/LongWeekend/@(Model.Year)/@(Model.CountryCode)')
                .then(response => {
                    this.longWeekends = response.data
                })
                .catch(error => {
                    console.log(error)
                });
        },
        GetPublicHolidays: function () {
            axios.get('/Api/v2/PublicHolidays/@(Model.Year)/@(Model.CountryCode)')
                .then(response => {
                    this.publicHolidays = response.data
                })
                .catch(error => {
                    this.publicHolidays = [];
                    console.log(error)
                });
        }
    }
})

</script>
}
